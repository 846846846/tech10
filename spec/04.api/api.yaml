openapi: 3.0.0

info:
  title: ECSite API
  description: ECSiteのWebAPI仕様。URL定義はケバブケース(-)を採用。
  version: 1.0.0

servers:
  - url: http://localhost:3001/dev/api/v1
    description: localhost
  - url: https://5adqe2wdk2.execute-api.ap-northeast-1.amazonaws.com/dev/api/v1
    description: dev server

tags:
  - name: meta
    description: メタ情報を扱うAPI。
  - name: users
    description: ユーザー情報を扱うAPI。
  - name: goods
    description: 商品情報を扱うAPI。

paths:
  /health:
    get:
      tags:
        - meta
      summary: 疎通確認をする。
      description: 疎通確認をする。
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
                example: Hello World!!

  /presigned-url/upload:
    get:
      tags:
        - meta
      summary: S3 PresignedURL(アップロード用)を取得する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: アップロードするファイルの名称
          schema:
            type: string
        - name: type
          in: path
          required: true
          description: アップロードするファイルのコンテンツタイプ
          schema:
            type: string
      description: S3 PresginedURL(アップロード用)を取得する。
      operationId: presignedUrl
      responses:
        "200":
          description: S3 PresginedURL(アップロード用)の生成に成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  presignedUrl:
                    type: string
        "400":
          description: Invalid input
        "500":
          description: Server error

  /presigned-url/download:
    get:
      tags:
        - meta
      summary: S3 PresignedURL(ダウンロード用)を取得する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
        - name: name
          in: query
          required: true
          description: ダウンロードするファイルの名称。
          schema:
            type: string
      description: S3 PresginedURL(ダウンロード用)を取得する。
      operationId: presignedUrl
      responses:
        "200":
          description: S3 PresginedURL(ダウンロード用)の生成に成功。
          content:
            application/json:
              schema:
                type: object
                properties:
                  presignedUrl:
                    type: string
        "400":
          description: Invalid input
        "500":
          description: Server error

  /users/signup:
    post:
      summary: ユーザーを新規登録する。
      description: Cognitoのユーザープールに新規ユーザアカウントを登録する。
      tags:
        - users
      operationId: signUp
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                role:
                  type: object
                  properties:
                    seller:
                      type: boolean
                    buyer:
                      type: boolean
              required:
                - name
                - email
                - password
            example:
              name: sample
              email: samlple@example.com
              password: a1faS112
              role:
                seller: true
                buyer: false
      responses:
        "200":
          description: 新規登録に成功した。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/confirmSignup:
    post:
      summary: ユーザーを有効化する。
      description: ユーザーが入力したチャレンジレスポンスを送信し、Cognitoが管理するユーザーを有効化する。
      tags:
        - users
      operationId: activate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                confirmationCode:
                  type: string
              required:
                - name
                - confirmationCode
            example:
              name: samlple
              confirmationCode: 752763
      responses:
        "200":
          description: 有効化に成功した。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /users/signin:
    post:
      summary: ユーザーのログインを行う。
      description: 要求されたユーザー情報とCognitoのユーザープールに登録された情報を検証する。
      tags:
        - users
      operationId: signIn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - name
                - password
            example:
              name: samlple
              password: a1faS112
      responses:
        "200":
          description: サインインに成功した。
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  idToken:
                    type: string
                  refreshToken:
                    type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          description: 認証に失敗した。
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /goods:
    get:
      tags:
        - goods
      summary: 販売者が所有する商品の一覧を取得する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
      responses:
        "200":
          description: 販売者が所有する商品の一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GoodsList"
              examples:
                goodsList:
                  $ref: "#/components/examples/GoodsList"
  /goods/new:
    post:
      tags:
        - goods
      summary: 商品を新規登録する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoodsDetail"
            examples:
              goods:
                $ref: "#/components/examples/GoodsDetail"
      responses:
        "201":
          description: Created

  /goods/{id}:
    get:
      tags:
        - goods
      summary: 指定された商品IDの情報を取得する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: 商品ID
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoodsDetail"
              examples:
                goods:
                  $ref: "#/components/examples/GoodsDetail"
    put:
      tags:
        - goods
      summary: 指定された商品IDの情報を更新する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: 商品ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoodsDetail"
            examples:
              goods:
                $ref: "#/components/examples/GoodsDetail"
      responses:
        "200":
          description: Successful update
    delete:
      tags:
        - goods
      summary: 指定された商品IDの情報を削除する。
      parameters:
        - name: Authorization
          in: header
          required: true
          description: (TBD:チケットNoのECSITE-14で対応) 認証情報。
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: 商品ID
          schema:
            type: integer
      responses:
        "204":
          description: Successfully deleted

components:
  schemas:
    GoodsDetail:
      type: object
      properties:
        id:
          type: integer
          description: 商品ID。各商品を一意に識別するための番号やコード。
        owner:
          type: string
          description: 商品の販売者。
        name:
          type: string
          description: 商品名。ユーザーが商品を検索や認識するための名前。
        explanation:
          type: string
          description: 商品説明。商品の詳細な情報や特徴を説明するテキスト。
        price:
          type: integer
          description: 商品の販売価格。
        image:
          type: string
          description: 商品の実際の見た目を示す画像(写真やイラスト)のファイル名。
        category:
          type: string
          description: 商品の分類。例：「家電」「ファッション」「食品」など。
        createAt:
          type: string
          description: 商品情報の作成日時。
        updateAt:
          type: string
          description: 商品情報の更新日時。
      required:
        - id
        - name
        - price
    GoodsList:
      type: object
      properties:
        id:
          type: integer
          description: 商品ID。各商品を一意に識別するための番号やコード。
        owner:
          type: string
          description: 商品の販売者。
        name:
          type: string
          description: 商品名。ユーザーが商品を検索や認識するための名前。
        price:
          type: integer
          description: 商品の販売価格。
        image:
          type: string
          description: 商品の実際の見た目を示す画像(写真やイラスト)のファイル名。

  examples:
    GoodsDetail:
      value:
        id: apple_001
        name: りんご
        owner: さとう
        explanation: りんごは、数ある果物の中でも人々に広く親しまれているものの一つです。その鮮やかな赤や緑の色合いは、見る者の目を引きつけ、果肉のジューシーで甘酸っぱい味は多くの人々の舌を楽しませてきました。りんごにはビタミンCや食物繊維が豊富に含まれており、健康に対するメリットも多いとされています。特に、食物繊維は腸内環境の改善に役立つとされています。また、様々な料理やデザート、ジュースとしての利用方法も幅広く、その利便性と美味しさから多くの家庭の食卓に欠かせない存在となっています。異なる品種や栽培方法によって、りんごの味や食感はさまざま。甘さを追求したものから、爽やかな酸味を持つものまで、好みに合わせて選ぶ楽しさも魅力の一つです。
        price: 100
        image: 20230928T073511479_Apple.jpeg
        category: 食品
        createAt: 20230828T050442+0900
        updateAt: 20230828T050442+0900
    GoodsList:
      value:
        - id: apple_001
          name: りんご
          price: 100
          owner: さとう
          image: 20230928T073511479_Apple.jpeg
        - id: apple_002
          name: りんご2
          price: 200
          owner: さとう
          image: 20230928T073511479_Apple2.jpeg
        - id: apple_003
          name: りんご
          price: 300
          owner: さとう
          image: 20230928T073511479_Apple3.jpeg
        - id: orange_001
          name: おれんじ
          price: 100
          owner: かとう
          image: 20230928T073511479_Orange.jpeg
        - id: orange_002
          name: おれんじ
          price: 200
          owner: かとう
          image: 20230928T073511479_Orange2.jpeg
